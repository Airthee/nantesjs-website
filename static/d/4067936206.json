{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"talks":[{"id":"3EqOJvu72NZNHrSzN4iZ","title":"Retours sur Vue.js Amsterdam 2019","description":"Nous avons eut la chance de participer √† Vue.js Amsterdam, la conf√©rence la plus importante en Europe pour la communaut√© des d√©veloppeurs Vue.js üíö\nCe fut 3 jours durant lesquels nous avons pu entendre des speakers tels qu'Evan You (cr√©ateur de Vue.js), Sebastien Chopin (cr√©ateur de Nuxt.js), des membres de la core team Vue.js, Webpack et bien d'autres... Nous vous proposons un tour d'horizon de ce que nous avons pu voir durant ces 3 jours. Au programme : - Vue.js aujourd'hui - Le futur de Vue.js (v3) - L'√©cosyst√®me Vue.js en 2019 - Vue.js et optimisations ","speakers":[{"id":"AwWi3KyoGYSJeGZ1XzJf5jUaFBE2","name":"Bruno Bonnin","link":"https://twitter.com/_bruno_b_"},{"id":"oaYEqMySGafwsp9LayTFKiZQx3n1","name":"Franck Abgrall","link":"https://twitter.com/FranckAbgrall"}]},{"id":"RuuwO2ROIvqJtGBehalm","title":"Typescript et les types opaques","description":"Prot√©ger son code des erreurs d'executions avec typescript c'est bien.\nMais on peut aussi : - Am√©liorer la lisibilit√© de son code. - Eviter de  nombreux de bugs fonctionnels. - Profiter de cette opportunit√© pour cr√©er des modules au limites claires. - Simplifier les p√©nibles r√©√©critures de code en cas de breaking changes.\nPour cela nous allons d√©couvrir progressivement ce que sont les opaques types au travers d'examples simples et concrets.\nCette pr√©sentation ne n√©cessite qu'une connaissance superficielle de typescript.","speakers":[{"id":"dOAigFIvyuM2UXJ5PmpkfNwyt6n1","name":"Axel Cateland","link":"https://twitter.com/catelandaxel"}]}]}}}]}}}